// Code generated by "enumer -type Priority -transform lower"; DO NOT EDIT.

package gotfy

import (
	"fmt"
	"strings"
)

const _PriorityName = "unspecifiedpriorityminlowdefaulthighmax"

var _PriorityIndex = [...]uint8{0, 19, 22, 25, 32, 36, 39}

const _PriorityLowerName = "unspecifiedpriorityminlowdefaulthighmax"

func (i Priority) String() string {
	if i < 0 || i >= Priority(len(_PriorityIndex)-1) {
		return fmt.Sprintf("Priority(%d)", i)
	}
	return _PriorityName[_PriorityIndex[i]:_PriorityIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PriorityNoOp() {
	var x [1]struct{}
	_ = x[UnspecifiedPriority-(0)]
	_ = x[Min-(1)]
	_ = x[Low-(2)]
	_ = x[Default-(3)]
	_ = x[High-(4)]
	_ = x[Max-(5)]
}

var _PriorityValues = []Priority{UnspecifiedPriority, Min, Low, Default, High, Max}

var _PriorityNameToValueMap = map[string]Priority{
	_PriorityName[0:19]:       UnspecifiedPriority,
	_PriorityLowerName[0:19]:  UnspecifiedPriority,
	_PriorityName[19:22]:      Min,
	_PriorityLowerName[19:22]: Min,
	_PriorityName[22:25]:      Low,
	_PriorityLowerName[22:25]: Low,
	_PriorityName[25:32]:      Default,
	_PriorityLowerName[25:32]: Default,
	_PriorityName[32:36]:      High,
	_PriorityLowerName[32:36]: High,
	_PriorityName[36:39]:      Max,
	_PriorityLowerName[36:39]: Max,
}

var _PriorityNames = []string{
	_PriorityName[0:19],
	_PriorityName[19:22],
	_PriorityName[22:25],
	_PriorityName[25:32],
	_PriorityName[32:36],
	_PriorityName[36:39],
}

// PriorityString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PriorityString(s string) (Priority, error) {
	if val, ok := _PriorityNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PriorityNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Priority values", s)
}

// PriorityValues returns all values of the enum
func PriorityValues() []Priority {
	return _PriorityValues
}

// PriorityStrings returns a slice of all String values of the enum
func PriorityStrings() []string {
	strs := make([]string, len(_PriorityNames))
	copy(strs, _PriorityNames)
	return strs
}

// IsAPriority returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Priority) IsAPriority() bool {
	for _, v := range _PriorityValues {
		if i == v {
			return true
		}
	}
	return false
}
